#include <bits/stdc++.h>

/****************************************************************

    Following is the class structure of the Node class:

        class Node
        {
        public:
	        int data;
	        Node *next;
	        Node(int data)
	        {
		        this->data = data;
		        this->next = NULL;
	        }
        };

*****************************************************************/


Node* reverseInK(Node* head,int n, int b[], int i) {
    if(head==NULL || head->next==NULL || n<1) return head;
	Node *prev = NULL;
    Node *curr = head;
    Node *nxt = NULL;
    int cnt = 0;
   while(b[i] == 0 && i < n) i++;
	while(curr !=NULL && cnt<b[i] && i<n){
		nxt = curr->next;
        curr->next = prev;
        prev = curr;
        curr = nxt;
        cnt++;
	}
	if(i>=n && curr!=NULL) return head;
	if(curr!=NULL){
		head->next = reverseInK(nxt, n, b, i+1);
	}
	return prev;
}

Node *getListAfterReverseOperation(Node *head, int n, int b[]){
	// Write your code here.
	return reverseInK(head, n,b,0);
}
